
This is an exercise on the is-a (inherits from) and has-a 
(contains) relations between objects.

Write a class Trailer. Its construct should take the contents
of the trailer (eg. "shopping", "kids") as an argument and store 
them in an attribute. Write the .toString method so that it
prints, for instance,
"a trailer for the kids"


Write a subclass of Bicycle called FamilyBike (is-a relationship). 
This should have an attribute "trailer", initially set to null (has-a). 
Code a method .attach() that takes a trailer object as an argument 
and assigns it to the attribute. Override the .toString method of
Bicycle so that it prints the same information as Bicycle does, plus details
on the trailer if present. For instance printing a FamilyBike object
after attaching a trailer for the kids should yield:

"A yellow bike with 9 gears and 5 miles on the clock, and a trailer
for the kids".

Try to reuse the Bicycle .toString method to do half of the work.

Create a bicycle of each type, attach a trailer where possible and 
store the cycles in the allbikes arraylist; then print them out.
 
This exercise will be done in class if time allows.

